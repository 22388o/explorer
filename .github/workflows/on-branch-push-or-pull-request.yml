name: Push on branch - Build & test

on:
  push:
    branches-ignore:
      - development
  pull_request:
    branches-ignore:
      - development

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v3

      # ================================================================================================================
      - name: Java Setup
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'temurin'
          java-version: '17'

      # ================================================================================================================
      - name: Run backend tests & build artifacts
        run: |
          mvn clean test
          mvn clean test -P integration
          mvn clean install -Dmaven.test.skip

      # ================================================================================================================
      - name: Build docker images
        run: |
          mvn spring-boot:build-image -Dmaven.test.skip -f sources/explorer-batch/pom.xml
          mvn spring-boot:build-image -Dmaven.test.skip -f sources/explorer-api/pom.xml
          mvn spring-boot:build-image -Dmaven.test.skip -f sources/explorer-web/pom.xml

      # ================================================================================================================
      - name: Run the docker-compose with our images
        run: |
          docker-compose up >> docker.logs 2>&1 &
          sleep 60        

      # ================================================================================================================
      - name: Testing docker images with a curl call to the userByUsername method
        id: userByUsername
        run: |
          userByUsernameResult=$(curl  -H "Content-Type: application/json" \
                -d '{ "query": "{ userByUsername(username: \"anonymous\") { id, username }}" }' \
                http://localhost:9090/graphql | jq '.data.userByUsername.id')
          echo "userByUsernameResult=${userByUsernameResult}" >> $GITHUB_OUTPUT

      - name: Check if userByUsername returns the correct value
        if: ${{ steps.userByUsername.outputs.userByUsernameResult != '"0"' }}
        run: |
          echo "Error - userByUsername id result is ${{ steps.userByUsername.outputs.userByUsernameResult }}"
          cat docker.logs
          exit 1
