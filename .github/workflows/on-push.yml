name: Push on develop - Build, test, create docker images & push them to docker hub

on:
  push:
    branches:
      - "development"

jobs:

  # ====================================================================================================================
  # Build artifacts (jar & docker images).
  build:
    runs-on: ubuntu-latest
    steps:
      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v3

      # ================================================================================================================
      - name: Java Setup
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # ================================================================================================================
      - name: Build jars
        run: |
          mvn clean install -P release -Dmaven.test.skip

      # ================================================================================================================
      - name: Build docker images
        run: |
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-batch/pom.xml
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-api/pom.xml
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-web/pom.xml

  # ====================================================================================================================
  # Java tests.
  java_tests:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v3

      # ================================================================================================================
      - name: Java Setup
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # ================================================================================================================
      - name: Run java tests
        run: |
          mvn clean test
          mvn clean test -P integration

  # ====================================================================================================================
  # Docker tests.
  docker_tests:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v3

      # ================================================================================================================
      - name: Run the docker-compose with our images
        run: |
          docker-compose up >> docker.logs 2>&1 &
          sleep 60        

      # ================================================================================================================
      - name: Testing docker images with a curl call to the userByUsername method
        id: userByUsername
        run: |
          userByUsernameResult=$(curl  -H "Content-Type: application/json" \
                -d '{ "query": "{ userByUsername(username: \"anonymous\") { userId, username }}" }' \
                http://localhost:9090/graphql | jq '.data.userByUsername.userId')
          echo "userByUsernameResult=${userByUsernameResult}" >> $GITHUB_OUTPUT

      - name: Check if userByUsername returns the correct value
        if: ${{ steps.userByUsername.outputs.userByUsernameResult != '"00000000-0000-0000-0000-000000000000"' }}
        run: |
          echo "Error - userByUsername id result is ${{ steps.userByUsername.outputs.userByUsernameResult }}"
          cat docker.logs
          exit 1

  # ====================================================================================================================
  # Docker images publication.
  docker_push:
    runs-on: ubuntu-latest
    needs: [ java_tests, docker_tests ]
    if: github.ref == 'refs/heads/development'
    steps:
      # ================================================================================================================
      - name: Retrieve the sources
        uses: actions/checkout@v3

      # ================================================================================================================
      - name: Java Setup
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      # ================================================================================================================
      - name: Get release number
        id: release
        run: echo "version=$(mvn help:evaluate -D expression=project.version -q -D forceStdout)" >> $GITHUB_OUTPUT

      # ================================================================================================================
      - name: Build docker images
        run: |
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-batch/pom.xml
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-api/pom.xml
          mvn spring-boot:build-image -P release -Dmaven.test.skip -f backend/servers/explorer-web/pom.xml

      # ================================================================================================================
      - name: Docker Hub login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.EXPLORER_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.EXPLORER_DOCKER_HUB_PASSWORD }}

      # ================================================================================================================
      - name: Tag and push the docker images to Docker hub
        run: |
          docker tag royllo/explorer-batch:latest royllo/explorer-batch:${{ steps.release.outputs.version }}
          docker tag royllo/explorer-api:latest royllo/explorer-api:${{ steps.release.outputs.version }}
          docker tag royllo/explorer-web:latest royllo/explorer-web:${{ steps.release.outputs.version }}
          docker push royllo/explorer-batch:latest
          docker push royllo/explorer-batch:${{ steps.release.outputs.version }}
          docker push royllo/explorer-api:latest
          docker push royllo/explorer-api:${{ steps.release.outputs.version }}
          docker push royllo/explorer-web:latest
          docker push royllo/explorer-web:${{ steps.release.outputs.version }}
